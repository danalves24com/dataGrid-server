{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Daniel Alves Rosel\\\\Documents\\\\Invoy\\\\Projects\\\\Data Grid2\\\\server\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Daniel Alves Rosel\\\\Documents\\\\Invoy\\\\Projects\\\\Data Grid2\\\\server\",\"filename\":\"C:\\\\Users\\\\Daniel Alves Rosel\\\\Documents\\\\Invoy\\\\Projects\\\\Data Grid2\\\\server\\\\src\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Daniel Alves Rosel\\\\Documents\\\\Invoy\\\\Projects\\\\Data Grid2\\\\server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Daniel Alves Rosel\\Documents\\Invoy\\Projects\\Data Grid2\\server\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Daniel Alves Rosel\\Documents\\Invoy\\Projects\\Data Grid2\\server",
      "filename": "C:\\Users\\Daniel Alves Rosel\\Documents\\Invoy\\Projects\\Data Grid2\\server\\src\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Daniel Alves Rosel\\Documents\\Invoy\\Projects\\Data Grid2\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Daniel Alves Rosel\\Documents\\Invoy\\Projects\\Data Grid2\\server\\src\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Daniel Alves Rosel\\Documents\\Invoy\\Projects\\Data Grid2\\server\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Daniel Alves Rosel\\Documents\\Invoy\\Projects\\Data Grid2\\server\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar bodyParser = require('body-parser');\n\nvar path = require('path');\n\nvar cors = require('cors');\n\nvar app = express(); //app.use(express.static(path.join(__dirname, '/build'))) //to host a build website\n\napp.use(bodyParser.json()); // to process params\n\napp.use(cors());\napp.get(\"/stat\", function (req, res) {\n  res.status(200).send(\"server is running\");\n});\nvar nodes = [];\napp.post(\"/test/post\", function (req, res) {\n  res.send(req.body);\n  console.log(req.body.data);\n  console.log(req.params);\n});\nvar nodeInitApi = {\n  \"create\": function create(req, res) {\n    nodes.push([req.params.nodeName, \"proc\", \"stor\", \"procRes\", \"storRes\", Date.now(), 0]);\n    res.send(\"node created\");\n  },\n  \"terminate\": function terminate(req, res) {\n    for (var node in nodes) {\n      if (nodes[node][0] == req.params.nodeName) {\n        nodes[node] = [\"DEAD\"];\n        res.send(\"node \".concat(req.params.node, \" is terminated\"));\n      }\n    }\n\n    for (var node in nodes) {\n      if (Date.now() - nodes[node][5] >= 20000) {\n        if (nodes[node][1] != \"proc\") {\n          nodes[node][3] == \"ERR24#Failed to execute: \" + nodes[node][1];\n        } else {\n          nodes.splice(node, 1);\n        }\n      } else if (nodes[node][0] == \"DEAD\") {\n        nodes.splice(node, 1);\n      }\n    }\n  },\n  \"check-for-process\": function checkForProcess(req, res) {\n    for (var node in nodes) {\n      if (nodes[node][0] == req.params.nodeName) {\n        node = nodes[node];\n        node[5] = Date.now();\n        node[6] += 1;\n\n        if (node[1] != \"proc\") {\n          res.send(node[1]);\n          node[1] = \"processTaken\";\n        } else {\n          res.send(\"empty\");\n        } //5\n\n      }\n    }\n  }\n};\nvar nodeInteractApi = {\n  \"complete-task\": function completeTask(req, res) {\n    for (var node in nodes) {\n      if (nodes[node][0] == req.params.nodeName) {\n        console.log(req.body.data);\n        nodes[node][3] = req.body.data;\n        nodes[node][1] = \"proc\";\n        res.send(\"task noted: \" + req.body.data);\n      }\n    }\n  }\n};\napp.get(\"/node/init/:nodeName/:path\", function (req, res) {\n  nodeInitApi[req.params.path](req, res);\n});\napp.get(\"/grid/get/nodes\", function (req, res) {\n  var livingNodes = 0;\n\n  for (var node in nodes) {\n    if (nodes[node][0] != \"DEAD\") {\n      livingNodes += 1;\n    }\n  }\n\n  res.send({\n    \"node\": livingNodes,\n    \"values\": nodes\n  });\n});\napp.post(\"/node/interact/:nodeName/:path/\", function (req, res) {\n  nodeInteractApi[req.params.path](req, res);\n});\napp.post(\"/grid/assign/process/\", function (req, res) {\n  var nodeI = 0;\n  var busy = 0;\n\n  for (var node in nodes) {\n    console.log(Date.now() - nodes[node][5]);\n\n    if (nodes[node][1] == \"proc\" && nodes[node][3] == \"procRes\" && Date.now() - nodes[node][5] <= 10000 && nodes[node][6] <= 8) {\n      nodes[node][1] = req.body.proc;\n      nodeI = node;\n      res.send(\"http://localhost:8000/grid/\" + nodes[node][0] + \"/procRes\");\n      break;\n    } else {\n      busy += 1;\n    }\n  }\n\n  if (busy == nodes.length) {\n    res.send(\"anbs\");\n  }\n});\napp.get(\"/grid/:nodeName/procRes\", function (req, res) {\n  for (var node in nodes) {\n    if (nodes[node][0] == req.params.nodeName) {\n      var resultToSend = nodes[node][3] + \".\";\n      res.send(resultToSend);\n      nodes[node][3] = \"procRes\";\n\n      if (nodes[node][3].split(\"#\") == \"ERR24\") {\n        nodes.splice(node, 1);\n      }\n    }\n  }\n}); //server log\n\napp.listen(8000, function () {\n  return console.log(\"server is listening on port 8000, happy coding\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "path",
        "cors",
        "app",
        "use",
        "json",
        "get",
        "req",
        "res",
        "status",
        "send",
        "nodes",
        "post",
        "body",
        "console",
        "log",
        "data",
        "params",
        "nodeInitApi",
        "push",
        "nodeName",
        "Date",
        "now",
        "node",
        "splice",
        "nodeInteractApi",
        "livingNodes",
        "nodeI",
        "busy",
        "proc",
        "length",
        "resultToSend",
        "split",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Daniel Alves Rosel\\Documents\\Invoy\\Projects\\Data Grid2\\server\\src\\",
      "sourcesContent": [
        "const express = require('express')\r\nconst bodyParser = require('body-parser')\r\nconst path = require('path')\r\nconst cors = require('cors');\r\nconst app = express();\r\n\r\n//app.use(express.static(path.join(__dirname, '/build'))) //to host a build website\r\napp.use(bodyParser.json()) // to process params\r\napp.use(cors())\r\napp.get(\"/stat\", (req, res) => {\r\n    res.status(200).send(`server is running`)\r\n})\r\n\r\nvar nodes = []\r\n\r\n\r\napp.post(\"/test/post\", (req, res)=>{\r\n    res.send(req.body);\r\n    console.log(req.body.data)\r\n    console.log(req.params)\r\n})\r\n\r\nvar nodeInitApi = {\r\n    \"create\": (req, res) => {\r\n        nodes.push([req.params.nodeName, \"proc\", \"stor\", \"procRes\", \"storRes\", Date.now(), 0]);    \r\n        res.send(\"node created\");\r\n    },    \r\n    \"terminate\": (req, res)=>{\r\n        for(var node in nodes) {\r\n            if (nodes[node][0] == req.params.nodeName) {\r\n                nodes[node] = [\"DEAD\"]                \r\n                res.send(`node ${req.params.node} is terminated`)\r\n                \r\n            }\r\n\r\n        }\r\n        for(var node in nodes) {\r\n            if(Date.now()-nodes[node][5] >= 20000) {\r\n                if(nodes[node][1] != \"proc\") {\r\n                    nodes[node][3] == \"ERR24#Failed to execute: \" + nodes[node][1]\r\n                }\r\n                else {\r\n                    nodes.splice(node, 1);\r\n                }                \r\n            }\r\n            else if(nodes[node][0] == \"DEAD\"){\r\n                nodes.splice(node, 1);\r\n            }\r\n        }\r\n    },\r\n    \"check-for-process\": (req, res) => {\r\n        for(var node in nodes) {\r\n            if (nodes[node][0] == req.params.nodeName) {\r\n                node = nodes[node]\r\n                node[5] = Date.now()   \r\n                node[6]+=1             \r\n                if(node[1]!=\"proc\") {\r\n                    res.send(node[1])\r\n                    node[1] = \"processTaken\"\r\n                    \r\n                }\r\n                else {\r\n                    res.send(\"empty\")\r\n                }\r\n                //5\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar nodeInteractApi = {\r\n    \"complete-task\": (req, res)=>{\r\n        for(var node in nodes) {\r\n            if (nodes[node][0] == req.params.nodeName) {                        \r\n                console.log(req.body.data)\r\n                nodes[node][3] = req.body.data;\r\n                nodes[node][1] = \"proc\"\r\n                res.send(\"task noted: \"+ req.body.data)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\napp.get(\"/node/init/:nodeName/:path\", (req, res) => {\r\n    nodeInitApi[req.params.path](req, res)    \r\n})\r\n\r\napp.get(\"/grid/get/nodes\", (req, res)=>{\r\n    var livingNodes = 0\r\n    for(var node in nodes) {\r\n         if(nodes[node][0] != \"DEAD\") {\r\n            livingNodes+=1\r\n         } \r\n    }\r\n    res.send({\"node\": livingNodes, \"values\": nodes})\r\n})\r\n\r\napp.post(\"/node/interact/:nodeName/:path/\", (req, res)=>{\r\n    nodeInteractApi[req.params.path](req, res)\r\n})\r\n\r\napp.post(\"/grid/assign/process/\", (req, res) => {\r\n    var nodeI = 0\r\n    var busy = 0\r\n    for (var node in nodes) {\r\n        console.log(Date.now() - nodes[node][5])\r\n        if(nodes[node][1] == \"proc\" && nodes[node][3] == \"procRes\" && Date.now() - nodes[node][5] <= 10000 && nodes[node][6]<=8) {\r\n            nodes[node][1]=req.body.proc\r\n            nodeI = node\r\n            res.send(\"http://localhost:8000/grid/\"+nodes[node][0]+\"/procRes\")\r\n            break;\r\n        }\r\n        else {\r\n            busy+=1\r\n        }\r\n    }\r\n    if(busy == nodes.length) {\r\n        res.send(\"anbs\")\r\n    }\r\n})\r\n\r\napp.get(\"/grid/:nodeName/procRes\", (req, res)=> {\r\n    for(var node in nodes) {\r\n        if (nodes[node][0] == req.params.nodeName){\r\n            var resultToSend = nodes[node][3]+\".\"            \r\n            res.send(resultToSend)\r\n            nodes[node][3] = \"procRes\"\r\n            if(nodes[node][3].split(\"#\") == \"ERR24\") {\r\n                nodes.splice(node, 1);\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n\r\n//server log\r\napp.listen(8000, () => console.log(\"server is listening on port 8000, happy coding\"))"
      ]
    },
    "sourceType": "script",
    "mtime": 1603491917753
  }
}